---
- name: rabbitmq_clustering | Capturing Erlang Cookie On Master
  command: "cat /var/lib/rabbitmq/.erlang.cookie"
  become: true
  register: "rabbitmq_erlang_cookie"
  when: inventory_hostname == rabbitmq_master

- debug:
    var: rabbitmq_erlang_cookie

- name: rabbitmq_clustering | Setting Erlang Cookie Of Master on Non-Master
  set_fact:
    rabbitmq_erlang_cookie: "{{ hostvars[rabbitmq_master]['rabbitmq_erlang_cookie']['stdout'] }}"
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | copy erlang cookie
  template:
    src: erlang.cookie.j2
    dest: /var/lib/rabbitmq/.erlang.cookie
    owner: rabbitmq
    group: rabbitmq
    mode: 0400
    # backing up in case the need to recover
    backup: yes
  become: true
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | copy erlang cookie
  template: src=erlang.cookie.j2 dest=/var/lib/rabbitmq/.erlang.cookie owner=rabbitmq group=rabbitmq mode=0400 backup=yes
  notify: restart rabbitmq-server
  when: inventory_hostname != rabbitmq_master
  become: true

- name: rabbitmq_clustering | stopping rabbitmq app
  command: rabbitmqctl stop_app
  when: inventory_hostname != rabbitmq_master
  become: true

- name: rabbitmq_clustering | resetting rabbitmq app
  command: rabbitmqctl reset
  when: inventory_hostname != "{{ rabbitmq_master }}"
  become: true

- name: rabbitmq_clustering | joining rabbitmq cluster
  command: rabbitmqctl join_cluster 'rabbit@{{ rabbitmq_master }}'
  register: cluster_joined
  when: inventory_hostname != "{{ rabbitmq_master }}"
  become: true

- name: rabbitmq_clustering | starting rabbitmq app
  command: rabbitmqctl start_app
  when: inventory_hostname != "{{ rabbitmq_master }}"
  become: true

- name: rabbitmq_clustering | marking as clustered
  file: path=/etc/rabbitmq/clustered state=touch
  when: cluster_master.changed or cluster_joined.changed
  become: true
